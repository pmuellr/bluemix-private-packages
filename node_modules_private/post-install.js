// Licensed under the Apache License. See footer for details.

var fs            = require("fs")
var path          = require("path")
var child_process = require("child_process")

var Program = path.relative(process.cwd(), __filename)

//------------------------------------------------------------------------------
function main() {
  ensureDirectory()

  var pkgs = getPrivatePackages()

  if (pkgs.length == 0) {
    log("no private packages found in `" + process.cwd() + "`")
    return
  }

  if (onStagingMachine()) {
    log("on staging machine, so skipping private `npm install`")
    copyPackages(done, pkgs)
  }

  else {
    exec("npm install", function() {
      copyPackages(done, pkgs)
    })
  }
}

//------------------------------------------------------------------------------
function copyPackages(cb, pkgs) {
  var pkgs = pkgs.slice()

  copyNextPackage()

  function copyNextPackage() {
    if (pkgs.length == 0) return cb()

    copyPackage(copyNextPackage, pkgs.shift())
  }
}

//------------------------------------------------------------------------------
function copyPackage(cb, pkg) {
  if (pkg == 'ncp') {
      cb()
  }
  else {
    var pkgDir = path.join("node_modules", pkg)

    var ncp = require('ncp').ncp;
    ncp.limit = 16;
    ncp(pkgDir, '../' + pkgDir, function (err) {
      if (err) {
        return logError(err)
      }
      else {
        cb()
      }
    });
  }
}

//------------------------------------------------------------------------------
function done(err) {
  if (err) return logError(err)

  log("done")
}

//------------------------------------------------------------------------------
function exec(cmd, cb) {
  log("running `" + cmd + "`")
  child_process.exec(cmd, handleExecDone)

  function handleExecDone(err, stdout, stderr) {
    if (err) {
      log("error running `" + cmd + "`")
      log("code:   " + err.code)
      log("signal: " + err.signal)

      return logError()
    }

    if (stdout != "") console.log(stdout)
    if (stderr != "") console.error(stderr)

    cb()
  }
}

//------------------------------------------------------------------------------
function getPrivatePackages() {
  var pkgJsonFile     = path.join(process.cwd(), "package.json")
  var pkgJsonContents = fs.readFileSync(pkgJsonFile) + ""
  var pkgJson

  try {
      pkgJson = JSON.parse(pkgJsonContents)
  }
  catch (e) {
    logError("error reading `" + pkgJsonFile + "`")
  }

  if (!pkgJson.dependencies) {
    logError("no dependencies property in `" + pkgJsonFile + "`")
  }

  var result = []
  for (var pkgName in pkgJson.dependencies) {
    result.push(pkgName)
  }

  return result
}


//------------------------------------------------------------------------------
function onStagingMachine() {
  // log("env: " + JSON.stringify(process.env, null, 4))

  if (process.env.VCAP_APPLICATION) return true

  return false
}

//------------------------------------------------------------------------------
function ensureDirectory() {
  var cwd = process.cwd()

  log("starting in directory: " + cwd)

  if (cwd == __dirname) return

  process.chdir(__dirname)
  log("changing to directory: " + process.cwd())
}

//------------------------------------------------------------------------------
function log(message) {
  console.log(Program + ": " + message)
}

//------------------------------------------------------------------------------
function logError(err) {
  if (err) {
    log("=====================================================================")
    log("error: " + err + "; exiting")
    log("expect failures of some sort")
    log("=====================================================================")
  }
  else {
    log("exiting")
  }

  process.exit(0)
}

//------------------------------------------------------------------------------
main()

/*
#-------------------------------------------------------------------------------
# Copyright 2014 Patrick Mueller
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#-------------------------------------------------------------------------------
*/
